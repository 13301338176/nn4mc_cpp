<%BEGIN_DEFINITION_TEMPLATE>

/*************
* gru.cpp
*
* GRU Layer
* Hardware Plateform: ESP-32
*
* This file defines the functions needed to build a Simple RNN layer, and perform a forward pass.
*/

#include "gru.h"
#include "activation_func.h"
#include <math.h>
#include <stdlib.h>

#define max(a, b) (((a)>(b) ? (a) : (b)))
#define min(a, b) (((a)<(b) ? (a) : (b)))

struct GRU buildGRU()
{
	struct GRU layer;

	layer.weights = W;
	layer.biases = b;

	return layer;
}


<%LAYER_DATATYPE_DELIMITER> * fwdGRU(struct GRU L, <%LAYER_DATATYPE_DELIMITER>* input)
{

    free(input);
    return h;
}

<%END_DEFINITION_TEMPLATE>

<%BEGIN_INITIALIZE_TEMPLATE>
        <%LAYER_NAME> = buildGRU();
<%END_INITIALIZE_TEMPLATE>

<%BEGIN_CALL_TEMPLATE>
        data = fwdGRU(<%LAYER_NAME>, <%INPUT>);
<%END_CALL_TEMPLATE>
